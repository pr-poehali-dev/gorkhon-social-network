import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [activeTab, setActiveTab] = useState('feed');
  const [newPost, setNewPost] = useState('');
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [showAuth, setShowAuth] = useState(false);
  const [authMode, setAuthMode] = useState('login');
  const [formData, setFormData] = useState({ email: '', password: '', name: '', confirmPassword: '' });
  const [postsData, setPostsData] = useState([]);
  const [currentUser, setCurrentUser] = useState(null);

  const initialPosts = [
    {
      id: 1,
      author: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
      avatar: '/img/a34c9c60-b1fd-40fb-9711-2a46ec701434.jpg',
      time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      content: '–ö–∞–∫–∞—è –∫—Ä–∞—Å–æ—Ç–∞ –≤ –Ω–∞—à–µ–º –ì–æ—Ä—Ö–æ–Ω–µ —Å–µ–≥–æ–¥–Ω—è! –°–æ–ª–Ω—Ü–µ —Å–≤–µ—Ç–∏—Ç, –ø—Ç–∏—á–∫–∏ –ø–æ—é—Ç üåû',
      image: '/img/a34c9c60-b1fd-40fb-9711-2a46ec701434.jpg',
      likes: 24,
      comments: 8,
      liked: false
    },
    {
      id: 2,
      author: '–ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤',
      avatar: '/img/fc06f7ea-92cf-4e5f-8641-5230751df945.jpg',
      time: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      content: '–û—Ç–ª–∏—á–Ω—ã–π —Å–µ–º–µ–π–Ω—ã–π –ø–∏–∫–Ω–∏–∫ –ø–æ–ª—É—á–∏–ª—Å—è! –°–ø–∞—Å–∏–±–æ –≤—Å–µ–º —Å–æ—Å–µ–¥—è–º –∑–∞ –∫–æ–º–ø–∞–Ω–∏—é!',
      image: '/img/fc06f7ea-92cf-4e5f-8641-5230751df945.jpg',
      likes: 31,
      comments: 12,
      liked: false
    },
    {
      id: 3,
      author: '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞',
      avatar: '/img/8c9dbc3f-89a6-4fa3-a5b2-bd7fd99a847b.jpg',
      time: '6 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
      content: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ª–µ—Ç–Ω–µ–º—É —Ñ–µ—Å—Ç–∏–≤–∞–ª—é –∏–¥–µ—Ç –ø–æ–ª–Ω—ã–º —Ö–æ–¥–æ–º! –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤—Å–µ 15 –∞–≤–≥—É—Å—Ç–∞!',
      image: '/img/8c9dbc3f-89a6-4fa3-a5b2-bd7fd99a847b.jpg',
      likes: 47,
      comments: 18,
      liked: false
    }
  ];

  const messages = [
    { id: 1, name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞', message: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?', time: '10:30', unread: 2 },
    { id: 2, name: '–°–æ—Å–µ–¥—Å–∫–∏–π —á–∞—Ç', message: '–ö—Ç–æ –∏–¥–µ—Ç –Ω–∞ —Å–æ–±—Ä–∞–Ω–∏–µ?', time: '09:15', unread: 5 },
    { id: 3, name: '–ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤', message: '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ!', time: '–≤—á–µ—Ä–∞', unread: 0 }
  ];

  useEffect(() => {
    setPostsData(initialPosts);
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è
    const savedUser = localStorage.getItem('gorkhonUser');
    if (savedUser) {
      setCurrentUser(JSON.parse(savedUser));
      setIsLoggedIn(true);
    }
  }, []);

  const handleLike = (postId) => {
    setPostsData(prev => prev.map(post => 
      post.id === postId 
        ? { ...post, likes: post.liked ? post.likes - 1 : post.likes + 1, liked: !post.liked }
        : post
    ));
  };

  const handleAuth = (e) => {
    e.preventDefault();
    if (authMode === 'register') {
      if (formData.password !== formData.confirmPassword) {
        alert('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!');
        return;
      }
      const newUser = { 
        name: formData.name, 
        email: formData.email,
        id: Date.now(),
        avatar: '/img/a34c9c60-b1fd-40fb-9711-2a46ec701434.jpg'
      };
      localStorage.setItem('gorkhonUser', JSON.stringify(newUser));
      setCurrentUser(newUser);
      setIsLoggedIn(true);
      setShowAuth(false);
      alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
    } else {
      // –ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
      const user = { 
        name: '–ñ–∏—Ç–µ–ª—å –ì–æ—Ä—Ö–æ–Ω–∞', 
        email: formData.email,
        id: Date.now(),
        avatar: '/img/a34c9c60-b1fd-40fb-9711-2a46ec701434.jpg'
      };
      localStorage.setItem('gorkhonUser', JSON.stringify(user));
      setCurrentUser(user);
      setIsLoggedIn(true);
      setShowAuth(false);
    }
    setFormData({ email: '', password: '', name: '', confirmPassword: '' });
  };

  const handleLogout = () => {
    localStorage.removeItem('gorkhonUser');
    setCurrentUser(null);
    setIsLoggedIn(false);
  };

  const handleCreatePost = () => {
    if (!newPost.trim()) return;
    const post = {
      id: Date.now(),
      author: currentUser?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π',
      avatar: currentUser?.avatar || '/img/a34c9c60-b1fd-40fb-9711-2a46ec701434.jpg',
      time: '—Ç–æ–ª—å–∫–æ —á—Ç–æ',
      content: newPost,
      image: '/img/a34c9c60-b1fd-40fb-9711-2a46ec701434.jpg',
      likes: 0,
      comments: 0,
      liked: false
    };
    setPostsData(prev => [post, ...prev]);
    setNewPost('');
  };

  if (!isLoggedIn) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-coral via-turquoise to-lavender flex items-center justify-center p-4">
        <Card className="w-full max-w-md bg-white/90 backdrop-blur-sm shadow-xl">
          <CardHeader className="text-center">
            <h1 className="text-3xl font-bold bg-gradient-to-r from-coral to-turquoise bg-clip-text text-transparent mb-2">
              –ì–æ—Ä—Ö–æ–ΩNet
            </h1>
            <p className="text-muted-foreground">–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –ø–æ—Å–µ–ª–∫–∞ –ì–æ—Ä—Ö–æ–Ω</p>
          </CardHeader>
          <CardContent>
            {!showAuth ? (
              <div className="space-y-4">
                <Button 
                  onClick={() => { setShowAuth(true); setAuthMode('login'); }}
                  className="w-full bg-gradient-to-r from-coral to-turquoise text-white"
                >
                  –í–æ–π—Ç–∏
                </Button>
                <Button 
                  onClick={() => { setShowAuth(true); setAuthMode('register'); }}
                  variant="outline" 
                  className="w-full"
                >
                  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                </Button>
              </div>
            ) : (
              <form onSubmit={handleAuth} className="space-y-4">
                <div className="text-center mb-4">
                  <h3 className="text-xl font-semibold">
                    {authMode === 'login' ? '–í—Ö–æ–¥' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}
                  </h3>
                </div>
                
                {authMode === 'register' && (
                  <div>
                    <label className="text-sm font-medium">–ò–º—è</label>
                    <Input
                      type="text"
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                      value={formData.name}
                      onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}
                      required
                    />
                  </div>
                )}
                
                <div>
                  <label className="text-sm font-medium">Email</label>
                  <Input
                    type="email"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ email"
                    value={formData.email}
                    onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}
                    required
                  />
                </div>
                
                <div>
                  <label className="text-sm font-medium">–ü–∞—Ä–æ–ª—å</label>
                  <Input
                    type="password"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    value={formData.password}
                    onChange={(e) => setFormData(prev => ({ ...prev, password: e.target.value }))}
                    required
                  />
                </div>
                
                {authMode === 'register' && (
                  <div>
                    <label className="text-sm font-medium">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
                    <Input
                      type="password"
                      placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                      value={formData.confirmPassword}
                      onChange={(e) => setFormData(prev => ({ ...prev, confirmPassword: e.target.value }))}
                      required
                    />
                  </div>
                )}
                
                <div className="flex space-x-2">
                  <Button type="submit" className="flex-1 bg-gradient-to-r from-coral to-turquoise text-white">
                    {authMode === 'login' ? '–í–æ–π—Ç–∏' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
                  </Button>
                  <Button 
                    type="button" 
                    variant="outline" 
                    onClick={() => setShowAuth(false)}
                  >
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                </div>
                
                <div className="text-center">
                  <Button 
                    type="button"
                    variant="link" 
                    onClick={() => setAuthMode(authMode === 'login' ? 'register' : 'login')}
                  >
                    {authMode === 'login' ? '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' : '–ï—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏'}
                  </Button>
                </div>
              </form>
            )}
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-coral via-turquoise to-lavender">
      <div className="container mx-auto px-4 py-6 max-w-6xl">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center justify-between bg-white/90 backdrop-blur-sm rounded-2xl p-6 shadow-lg">
            <div className="flex items-center space-x-4">
              <h1 className="text-3xl font-bold bg-gradient-to-r from-coral to-turquoise bg-clip-text text-transparent font-mono">
                –ì–æ—Ä—Ö–æ–ΩNet
              </h1>
              <Badge variant="secondary" className="bg-gradient-to-r from-turquoise to-lavender text-white">
                –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –ø–æ—Å–µ–ª–∫–∞ –ì–æ—Ä—Ö–æ–Ω
              </Badge>
            </div>
            <div className="flex items-center space-x-4">
              <Button variant="ghost" size="sm">
                <Icon name="Bell" size={20} />
              </Button>
              <div className="flex items-center space-x-2">
                <Avatar>
                  <AvatarImage src={currentUser?.avatar} />
                  <AvatarFallback>{currentUser?.name?.[0] || '–£'}</AvatarFallback>
                </Avatar>
                <Button variant="ghost" size="sm" onClick={handleLogout}>
                  <Icon name="LogOut" size={16} />
                </Button>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –ü—Ä–æ—Ñ–∏–ª—å */}
          <div className="lg:col-span-1">
            <Card className="bg-white/90 backdrop-blur-sm shadow-lg">
              <CardHeader className="text-center">
                <Avatar className="mx-auto mb-4 w-20 h-20">
                  <AvatarImage src={currentUser?.avatar} />
                  <AvatarFallback>{currentUser?.name?.[0] || '–£'}</AvatarFallback>
                </Avatar>
                <h3 className="font-semibold text-lg">{currentUser?.name || '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å'}</h3>
                <p className="text-sm text-muted-foreground">–ñ–∏—Ç–µ–ª—å –ì–æ—Ä—Ö–æ–Ω–∞</p>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex justify-between text-sm">
                  <span>–ü—É–±–ª–∏–∫–∞—Ü–∏–∏</span>
                  <span className="font-semibold text-primary">12</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span>–°–æ—Å–µ–¥–∏</span>
                  <span className="font-semibold text-primary">48</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span>–ü–æ–¥–ø–∏—Å—á–∏–∫–∏</span>
                  <span className="font-semibold text-primary">67</span>
                </div>
                <Button className="w-full bg-gradient-to-r from-coral to-turquoise hover:from-coral/80 hover:to-turquoise/80 text-white">
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                </Button>
              </CardContent>
            </Card>

            {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
            <Card className="mt-4 bg-white/90 backdrop-blur-sm shadow-lg">
              <CardContent className="p-4">
                <nav className="space-y-2">
                  <Button 
                    variant={activeTab === 'feed' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('feed')}
                  >
                    <Icon name="Home" size={18} className="mr-2" />
                    –õ–µ–Ω—Ç–∞
                  </Button>
                  <Button 
                    variant={activeTab === 'messages' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('messages')}
                  >
                    <Icon name="MessageCircle" size={18} className="mr-2" />
                    –°–æ–æ–±—â–µ–Ω–∏—è
                  </Button>
                  <Button 
                    variant={activeTab === 'reels' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('reels')}
                  >
                    <Icon name="Play" size={18} className="mr-2" />
                    Reels
                  </Button>
                </nav>
              </CardContent>
            </Card>
          </div>

          {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å */}
          <div className="lg:col-span-2">
            {activeTab === 'feed' && (
              <div className="space-y-6">
                {/* –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç */}
                <Card className="bg-white/90 backdrop-blur-sm shadow-lg">
                  <CardContent className="p-6">
                    <div className="flex space-x-4">
                      <Avatar>
                        <AvatarImage src={currentUser?.avatar} />
                        <AvatarFallback>{currentUser?.name?.[0] || '–£'}</AvatarFallback>
                      </Avatar>
                      <div className="flex-1 space-y-3">
                        <Textarea 
                          placeholder="–ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –ì–æ—Ä—Ö–æ–Ω–µ?"
                          value={newPost}
                          onChange={(e) => setNewPost(e.target.value)}
                          className="min-h-[80px]"
                        />
                        <div className="flex justify-between items-center">
                          <div className="flex space-x-2">
                            <Button variant="ghost" size="sm">
                              <Icon name="Image" size={18} className="mr-1" />
                              –§–æ—Ç–æ
                            </Button>
                            <Button variant="ghost" size="sm">
                              <Icon name="MapPin" size={18} className="mr-1" />
                              –ú–µ—Å—Ç–æ
                            </Button>
                          </div>
                          <Button 
                            className="bg-gradient-to-r from-coral to-turquoise text-white"
                            onClick={handleCreatePost}
                            disabled={!newPost.trim()}
                          >
                            –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
                          </Button>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* –ü–æ—Å—Ç—ã */}
                {postsData.map((post) => (
                  <Card key={post.id} className="bg-white/90 backdrop-blur-sm shadow-lg">
                    <CardContent className="p-6">
                      <div className="flex items-center space-x-3 mb-4">
                        <Avatar>
                          <AvatarImage src={post.avatar} />
                          <AvatarFallback>{post.author[0]}</AvatarFallback>
                        </Avatar>
                        <div>
                          <h4 className="font-semibold">{post.author}</h4>
                          <p className="text-sm text-muted-foreground">{post.time}</p>
                        </div>
                      </div>
                      <p className="mb-4">{post.content}</p>
                      <img 
                        src={post.image} 
                        alt="Post" 
                        className="w-full h-64 object-cover rounded-lg mb-4"
                      />
                      <div className="flex items-center justify-between">
                        <div className="flex space-x-4">
                          <Button 
                            variant="ghost" 
                            size="sm" 
                            className={post.liked ? "text-red-500 hover:text-red-600" : "text-coral hover:text-coral/80"}
                            onClick={() => handleLike(post.id)}
                          >
                            <Icon name="Heart" size={18} className={`mr-1 ${post.liked ? 'fill-current' : ''}`} />
                            {post.likes}
                          </Button>
                          <Button variant="ghost" size="sm">
                            <Icon name="MessageCircle" size={18} className="mr-1" />
                            {post.comments}
                          </Button>
                          <Button variant="ghost" size="sm">
                            <Icon name="Share2" size={18} />
                          </Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            )}

            {activeTab === 'messages' && (
              <Card className="bg-white/90 backdrop-blur-sm shadow-lg">
                <CardHeader>
                  <h3 className="text-xl font-semibold">–°–æ–æ–±—â–µ–Ω–∏—è</h3>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {messages.map((msg) => (
                      <div key={msg.id} className="flex items-center space-x-3 p-3 hover:bg-gray-50 rounded-lg cursor-pointer">
                        <Avatar>
                          <AvatarFallback>{msg.name[0]}</AvatarFallback>
                        </Avatar>
                        <div className="flex-1">
                          <div className="flex justify-between items-start">
                            <h4 className="font-medium">{msg.name}</h4>
                            <span className="text-xs text-muted-foreground">{msg.time}</span>
                          </div>
                          <p className="text-sm text-muted-foreground">{msg.message}</p>
                        </div>
                        {msg.unread > 0 && (
                          <Badge variant="default" className="bg-coral text-white">
                            {msg.unread}
                          </Badge>
                        )}
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {activeTab === 'reels' && (
              <Card className="bg-white/90 backdrop-blur-sm shadow-lg">
                <CardHeader>
                  <h3 className="text-xl font-semibold">Reels –ì–æ—Ä—Ö–æ–Ω–∞</h3>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="bg-black rounded-lg aspect-[9/16] max-w-xs mx-auto relative overflow-hidden">
                      <img 
                        src="/img/fc06f7ea-92cf-4e5f-8641-5230751df945.jpg" 
                        alt="Reels" 
                        className="w-full h-full object-cover"
                      />
                      <div className="absolute inset-0 bg-black/20 flex items-center justify-center">
                        <Button size="lg" className="rounded-full bg-white/20 hover:bg-white/30">
                          <Icon name="Play" size={32} className="text-white" />
                        </Button>
                      </div>
                      <div className="absolute bottom-4 left-4 right-4 text-white">
                        <p className="text-sm font-medium">–°–µ–º–µ–π–Ω—ã–π –ø–∏–∫–Ω–∏–∫ –≤ –ì–æ—Ä—Ö–æ–Ω–µ</p>
                        <p className="text-xs opacity-80">@–º–∏—Ö–∞–∏–ª_—Å–∏–¥–æ—Ä–æ–≤</p>
                      </div>
                    </div>
                    <div className="text-center">
                      <Button className="bg-gradient-to-r from-coral to-turquoise text-white">
                        <Icon name="Plus" size={18} className="mr-2" />
                        –°–æ–∑–¥–∞—Ç—å Reels
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>
            )}
          </div>

          {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å */}
          <div className="lg:col-span-1">
            {/* –ù–æ–≤–æ—Å—Ç–∏ –ø–æ—Å–µ–ª–∫–∞ */}
            <Card className="bg-white/90 backdrop-blur-sm shadow-lg mb-4">
              <CardHeader>
                <h3 className="font-semibold text-lg">–ù–æ–≤–æ—Å—Ç–∏ –ì–æ—Ä—Ö–æ–Ω–∞</h3>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <h4 className="font-medium text-sm">–õ–µ—Ç–Ω–∏–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å 2024</h4>
                  <p className="text-xs text-muted-foreground">15 –∞–≤–≥—É—Å—Ç–∞ –≤ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–º –ø–∞—Ä–∫–µ</p>
                </div>
                <div className="space-y-2">
                  <h4 className="font-medium text-sm">–†–µ–º–æ–Ω—Ç –¥–æ—Ä–æ–≥–∏</h4>
                  <p className="text-xs text-muted-foreground">–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç —Å 1 —Å–µ–Ω—Ç—è–±—Ä—è</p>
                </div>
                <div className="space-y-2">
                  <h4 className="font-medium text-sm">–°—É–±–±–æ—Ç–Ω–∏–∫</h4>
                  <p className="text-xs text-muted-foreground">–ö–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É –≤ 9:00</p>
                </div>
              </CardContent>
            </Card>

            {/* –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å–µ–¥–∏ */}
            <Card className="bg-white/90 backdrop-blur-sm shadow-lg">
              <CardHeader>
                <h3 className="font-semibold text-lg">–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å–µ–¥–∏</h3>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {['–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞', '–ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤', '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞'].map((name) => (
                    <div key={name} className="flex items-center space-x-3">
                      <Avatar className="w-8 h-8">
                        <AvatarFallback className="text-xs">{name[0]}</AvatarFallback>
                      </Avatar>
                      <div className="flex-1">
                        <p className="text-sm font-medium">{name}</p>
                      </div>
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Index;